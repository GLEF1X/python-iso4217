name: Check currency db

on:
  workflow_dispatch:
  schedule:
    - cron: '0 * */1 * *'

jobs:
  check-if-currency-database-updated:
    runs-on: ubuntu-latest
    name: db-update-check
    steps:
      - uses: actions/checkout@master
        name: checkout repo

      - name: Check json file db hash
        continue-on-error: false
        run: |
          chmod +x ./scripts/compare_hashes.sh 
          ./scripts/compare_hashes.sh
        shell: bash

      - name: Commit and push changes
        run: |
          git config --global user.name "GLEF1X"
          git config --global user.email "glebgar567@gmail.com"
          git add -A
          git commit -m "Update currency db"
          git push origin master
#
#  build:
#    name: Build
#    needs: db-update-check
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@master
#
#      - name: Set up Python 3.10
#        uses: actions/setup-python@v2
#        with:
#          python-version: "3.10"
#
#      - name: Install dependencies
#        run: |
#          pip install -U pip virtualenv poetry poetry-dynamic-versioning
#          poetry config virtualenvs.create false
#
#      - name: Build
#        run: |
#          poetry build
#
#      - name: Bump version
#        run: |
#          poetry-dynamic-versioning
#          git config --global user.name "GLEF1X"
#          git config --global user.email "glebgar567@gmail.com"
#          git add -A
#          git commit -m "bump version"
#          git push origin master
#
#      - name: Try install wheel
#        run: |
#          mkdir -p try_install
#          cd try_install
#          virtualenv venv
#          venv/bin/pip install ../dist/iso4217-*.whl
#      - name: Publish artifacts
#        uses: actions/upload-artifact@v2
#        with:
#          name: dist
#          path: dist/*
#
#  publish:
#    name: Publish
#    needs: build
#    if: "success() && startsWith(github.ref, 'refs/tags/')"
#    runs-on: ubuntu-latest
#    steps:
#      - name: Download artifacts
#        uses: actions/download-artifact@v1
#        with:
#          name: dist
#          path: dist
#
#      - name: Publish a Python distribution to PyPI
#        uses: pypa/gh-action-pypi-publish@master
#        with:
#          user: __token__
#          password: ${{ secrets.PYPI_TOKEN }}

      
      


